<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scutj2ee.bookstore.dao.UserDao">
  <resultMap id="userMap" type="com.scutj2ee.bookstore.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="integration" jdbcType="INTEGER" property="integration" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>

  <delete id="deleteUser" parameterType="java.lang.Integer">
    delete from user
    where id = #{id}
  </delete>

  <insert id="insertUser" parameterType="com.scutj2ee.bookstore.entity.User">
    insert into user (integration, `password`, phone,
      email, user_name)
    values (#{integration}, #{password}, #{phone}, #{email,jdbcType}, #{userName})
  </insert>

  <update id="updateUser" parameterType="com.scutj2ee.bookstore.entity.User">
    update user
    <set>
      <if test="integration != null and integration != ''">integration = #{integration},</if>
      <if test="password != null and password != ''"> `password` = #{password},</if>
      <if test="phone != null and phone != ''"> phone = #{phone},</if>
      <if test="email != null and email != ''"> email = #{email},</if>
      <if test="userName != null and userName != ''"> user_name = #{userName}</if>
    </set>
    where id = #{id}
  </update>

  <select id="findUserById" parameterType="java.lang.Integer" resultMap="userMap">
    select id, integration, `password`, phone, email, user_name
    from user
    where id = #{id}
  </select>

  <select id="selectAll" parameterType="java.lang.Integer" resultMap="userMap">
    select id, integration, `password`, phone, email, user_name
    from user
  </select>

  <select id="findByUsername" resultMap="userMap">
    select id, integration, `password`, phone, user_name
    from user where user_name=#{username}
  </select>

  <select id="findByUsernameAndPassword" resultMap="userMap">
    select id, integration, `password`, phone, user_name
    from user where user_name=#{username}
    and `password`=#{password}
  </select>
</mapper>

