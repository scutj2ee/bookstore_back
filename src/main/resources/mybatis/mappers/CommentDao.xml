<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scutj2ee.bookstore.dao.CommentDao">
  <resultMap id="commentMap" type="com.scutj2ee.bookstore.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="from_uid" jdbcType="INTEGER" property="fromUid" />
  </resultMap>

  <delete id="deleteComment" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id}
  </delete>

  <insert id="insertComment" parameterType="com.example.demo.entity.Comment">
    insert into comment (id, content, `date`,
      book_id,from_uid)
    values (#{d}, #{contient}, #{date},
      #{bookId},#{fromUid})
  </insert>

  <update id="updateComment" parameterType="com.example.demo.entity.Comment">
    update comment
    <set>
      <if test="content != null and content != ''"> content = #{content},</if>
      <if test="date != null and date != ''"> `date` = #{date},</if>
      <if test="bookId != null and bookId != ''"> book_id = #{bookId},</if>
      <if test="fromUid != null and fromUid!= ''"> from_uid = #{fromUid}</if>
    </set>
    where id = #{id}
  </update>

  <select id="findCommentById" parameterType="java.lang.Integer" resultMap="commentMap">
    select comment_id, content, `date`, book_id, from_uid
    from comment
    where id = #{id}
  </select>

  <select id="selectAll" resultMap="commentMap">
    select comment_id, content, `date`, book_id, from_uid
    from comment
  </select>
</mapper>