<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.BookCategoryDao">
  <resultMap id="bookCategoryMap" type="com.example.demo.entity.BookCategory">
    <id column="cate_id" jdbcType="INTEGER" property="cateId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>

  <delete id="deleteBookCategory" parameterType="java.lang.Integer">
    delete from book_category
    where cate_id = #{cateId}
  </delete>

  <insert id="insertBookCategory" parameterType="com.example.demo.entity.BookCategory">
    insert into book_category (cate_id, parent_id, `name`, `status`, `type`, created, updated)
    values (#{cateId}, #{parentId}, #{name}, #{status}, #{type}, #{created}, #{updated})
  </insert>

  <update id="updateBookCategory" parameterType="com.example.demo.entity.BookCategory">
    update book_category
    <set>
      <if test="parentId != null and parentId != ''"> parent_id = #{parentId},</if>
      <if test="name != null and name != ''">`name` = #{name},</if>
      <if test="status != null and status != ''">`status` = #{status},</if>
      <if test="type != null and type != ''"> `type` = #{type},</if>
      <if test="created != null and created != ''">created = #{created},</if>
      <if test="updated != null and updated != ''">updated = #{updated}</if>
    </set>
    where cate_id = #{cateId}
  </update>

  <select id="findBookCategoryById" parameterType="java.lang.Integer" resultMap="bookCategoryMap">
    select cate_id, parent_id, `name`, `status`, `type`, created, updated
    from book_category
    where cate_id = #{cateId}
  </select>

  <select id="selectAll" resultMap="bookCategoryMap">
    select cate_id, parent_id, `name`, `status`, `type`, created, updated
    from book_category
  </select>
</mapper>