<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scutj2ee.bookstore.dao.OrderDao">
    <resultMap id="orderMap" type="com.scutj2ee.bookstore.entity.Order">
        <id column="id" property="id" />
        <result column="order_no" property="orderNo" />
        <result column="pay_no" property="payNo" />
        <result column="address_id" property="addressId" />
        <result column="create_time" property="createTime" />
        <result column="end_time" property="endTime" />
        <result column="status" property="status" />
        <result column="payment" property="payment" />
        <result column="user_id" property="userId" />
        <result column="delete" property="delete" />
    </resultMap>

    <delete id="deleteOrder" parameterType="java.lang.Integer">
      delete from `order`
      where id = #{id}
    </delete>

    <insert id="insertOrder" parameterType="com.scutj2ee.bookstore.entity.Order">
      insert into `order` (id, address_id, create_time, end_time, status, payment, user_id, `delete`)
      values (#{id}, #{addressId}, #{createTime}, #{endTime}, #{status}, #{payment},#{userId} ,#{delete})
    </insert>

    <update id="updateOrder" parameterType="com.scutj2ee.bookstore.entity.Order">
        update `order`
        <set>
            <if test="orderNo != null and orderNo != ''">order_no = #{orderNo},</if>
            <if test="payNo != null and payNo != ''">pay_no = #{payNo},</if>
            <if test="addressId != null and addressId != ''">address_id = #{addressId},</if>
            <if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
            <if test="endTime != null and endTime != ''">end_time =#{endTime},</if>
            <if test="status != null and status != ''"> status = #{status},</if>
            <if test="payment != null and payment != ''">payment = #{payment},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="delete != null and delete != ''">`delete`= #{delete}</if>
        </set>
        where id = #{id}
    </update>

    <select id="findOrderById" parameterType="java.lang.Integer" resultMap="orderMap">
      select o.*
      from `order`o
      where o.id = #{id}
    </select>

    <select id="selectAll" resultMap="orderMap">
      select o.*
      from `order` o
    </select>

    <select id="findByUserId" parameterType="java.lang.Integer" resultMap="orderMap">
      select o.*
      from `order` o
      where o.user_id = #{userId}
    </select>

    <select id="getOrderListByParams" resultMap="orderMap">
      select o.*
      from `order` o
    </select>

    <select id="findByOrderNo" resultMap="orderMap">
      select o.*
      from order o
      where o.user_id = #{userId}
    </select>

    <update id="updateOrderByOrderNoAndPayNo" parameterType="com.scutj2ee.bookstore.entity.Order">
        update `order`
        <set>
            <if test="payNo != null and payNo != ''">pay_no = #{payNo},</if>
            <if test="addressId != null and addressId != ''">address_id = #{addressId},</if>
            <if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
            <if test="endTime != null and endTime != ''">end_time = #{endTime},</if>
            <if test="status != null and status != ''"> status = #{status},</if>
            <if test="payment != null and payment != ''">payment = #{payment},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="delete != null and delete != ''">`delete`= #{delete}</if>
        </set>
        where order_no= #{orderNo}
    </update>


    <update id="updateStatus" parameterType="com.scutj2ee.bookstore.entity.Order">
        update `order`
        set status = #{status}
        where id= #{id}
    </update>

    <select id="findIdsByUserId" resultType="Integer">
      select o.id
      from `order` o
      where o.user_id=#{userId}
    </select>
</mapper>