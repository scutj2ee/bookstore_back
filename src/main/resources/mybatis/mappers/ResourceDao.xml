<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Resource">
    <id column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="resname" jdbcType="VARCHAR" property="resname" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resource
    where resource_id = #{resourceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Resource">
    insert into resource (resource_id, resname)
    values (#{resourceId,jdbcType=INTEGER}, #{resname,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Resource">
    update resource
    set resname = #{resname,jdbcType=VARCHAR}
    where resource_id = #{resourceId,jdbcType=INTEGER}
  </update>
  <select id="findByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select resource_id, resname
    from resource
    where resource_id = #{resourceId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select resource_id, resname
    from resource
  </select>
  <select id="findbyUserId" resultMap="BaseResultMap">
    select resource,resource_id, resource,resname
    from resource,role_resource
    where resource.resource_id=role_resource.resource_id and role_resource.role_id=#{roleId}
  </select>
</mapper>